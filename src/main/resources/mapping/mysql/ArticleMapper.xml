<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neilren.neilren4j.modules.article.dao.ArticleDao">
    <resultMap id="BaseResultMap" type="com.neilren.neilren4j.modules.article.entity.Article">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="article_type" jdbcType="INTEGER" property="articleType"/>
        <result column="views" jdbcType="BIGINT" property="views"/>
        <result column="article_dat" jdbcType="TIMESTAMP" property="articleDat"/>
        <result column="article_status" jdbcType="INTEGER" property="articleStatus"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
               type="com.neilren.neilren4j.modules.article.entity.ArticleWithBLOBs">
        <result column="source_url" jdbcType="LONGVARCHAR" property="sourceUrl"/>
        <result column="author" jdbcType="LONGVARCHAR" property="author"/>
        <result column="author_url" jdbcType="LONGVARCHAR" property="authorUrl"/>
        <result column="title" jdbcType="LONGVARCHAR" property="title"/>
        <result column="keyword" jdbcType="LONGVARCHAR" property="keyword"/>
        <result column="describes" jdbcType="LONGVARCHAR" property="describes"/>
        <result column="content" jdbcType="LONGVARCHAR" property="content"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, article_type, views, article_dat, article_status
  </sql>
    <sql id="Blob_Column_List">
    source_url, author, author_url, title, keyword, describes, content
  </sql>
    <select id="selectByLimit" parameterType="int"
            resultType="com.neilren.neilren4j.modules.article.entity.ArticleWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        ,grade
        FROM
        /*文章分页降序*/
        (SELECT *
        FROM t_article
        WHERE id &lt;= (SELECT id
        FROM t_article
        ORDER BY article_dat DESC
        LIMIT #{index,jdbcType=INTEGER}, 1)
        ORDER BY article_dat DESC
        LIMIT #{size,jdbcType=INTEGER}) article
        /*连接文章评分表*/
        LEFT JOIN (
        SELECT
        article_id,
        AVG(grade) AS grade
        FROM t_article_grade
        GROUP BY article_id
        ) article_grade ON article.id = article_grade.article_id
        ORDER BY article_dat DESC;
    </select>
    <select id="selectByArchivesLimit" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        SELECT *
        FROM t_article
        WHERE date_format(article_dat, '%Y-%m') = #{date,jdbcType=LONGVARCHAR}
        ORDER BY article_dat DESC
        LIMIT #{index,jdbcType=INTEGER}, #{size,jdbcType=INTEGER};
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        *
        FROM t_article
          /*连接文章评分表*/
          LEFT JOIN (
                      SELECT
                        article_id,
                        AVG(grade) AS grade
                      FROM t_article_grade
                      GROUP BY article_id
                    ) article_grade ON t_article.id = article_grade.article_id
        WHERE t_article.id = #{id,jdbcType=BIGINT};
    </select>
    <select id="searchByLike" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM t_article
        WHERE
        t_article.title LIKE "%"#{wd,jdbcType=LONGVARCHAR}"%"
        OR t_article.content LIKE "%"#{wd,jdbcType=LONGVARCHAR}"%"
        ORDER BY article_dat DESC
        LIMIT #{index,jdbcType=INTEGER},#{size,jdbcType=INTEGER};
    </select>
    <select id="selectTop10ByDate" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM t_article
        ORDER BY article_dat DESC
        LIMIT 10;
    </select>
    <select id="selectTop10ByViews" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        FROM t_article
        ORDER BY views DESC
        LIMIT 10;
    </select>
    <select id="selectArchives" resultType="com.neilren.neilren4j.modules.article.entity.ArticleArchives">
        SELECT
        DATE_FORMAT(article_dat, '%Y-%m')        AS DATEYmd,
        count(DATE_FORMAT(article_dat, '%Y-%m')) AS NUMBER
        FROM t_article
        GROUP BY DATEYmd
        ORDER BY DATEYmd DESC;
    </select>
    <select id="selectArticleTotal" resultType="Integer">
        SELECT count(id)
        FROM t_article
    </select>
    <select id="selectSearchArticleTotal" resultType="Integer" parameterType="String">
        SELECT count(1)
        FROM t_article
        WHERE
        t_article.title LIKE "%"#{_parameter}"%"
        OR t_article.content LIKE "%"#{_parameter}"%"
    </select>
    <select id="selectArticleTotalByArchives" resultType="Integer" parameterType="String">
        SELECT COUNT(1) AS con
        FROM t_article
        WHERE date_format(article_dat, '%Y-%m') = #{_parameter};
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_article
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.neilren.neilren4j.modules.article.entity.ArticleWithBLOBs">
    insert into t_article (article_type, views,
      article_dat, article_status, source_url, 
      author, author_url, title, 
      keyword, describes, content
      )
    values (#{articleType,jdbcType=INTEGER}, #{views,jdbcType=BIGINT},
      #{articleDat,jdbcType=TIMESTAMP}, #{articleStatus,jdbcType=INTEGER}, #{sourceUrl,jdbcType=LONGVARCHAR}, 
      #{author,jdbcType=LONGVARCHAR}, #{authorUrl,jdbcType=LONGVARCHAR}, #{title,jdbcType=LONGVARCHAR}, 
      #{keyword,jdbcType=LONGVARCHAR}, #{describes,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR}
      );
  </insert>
    <insert id="insertSelective" parameterType="com.neilren.neilren4j.modules.article.entity.ArticleWithBLOBs">
        insert into t_article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="articleType != null">
                article_type,
            </if>
            <if test="views != null">
                views,
            </if>
            <if test="articleDat != null">
                article_dat,
            </if>
            <if test="articleStatus != null">
                article_status,
            </if>
            <if test="sourceUrl != null">
                source_url,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="authorUrl != null">
                author_url,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="keyword != null">
                keyword,
            </if>
            <if test="describes != null">
                describes,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="articleType != null">
                #{articleType,jdbcType=INTEGER},
            </if>
            <if test="views != null">
                #{views,jdbcType=BIGINT},
            </if>
            <if test="articleDat != null">
                #{articleDat,jdbcType=TIMESTAMP},
            </if>
            <if test="articleStatus != null">
                #{articleStatus,jdbcType=INTEGER},
            </if>
            <if test="sourceUrl != null">
                #{sourceUrl,jdbcType=LONGVARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=LONGVARCHAR},
            </if>
            <if test="authorUrl != null">
                #{authorUrl,jdbcType=LONGVARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=LONGVARCHAR},
            </if>
            <if test="keyword != null">
                #{keyword,jdbcType=LONGVARCHAR},
            </if>
            <if test="describes != null">
                #{describes,jdbcType=LONGVARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateViewsByPrimaryKey" parameterType="java.lang.Long">
        update t_article
        <set>
            views = views + 1
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.neilren.neilren4j.modules.article.entity.ArticleWithBLOBs">
        update t_article
        <set>
            <if test="articleType != null">
                article_type = #{articleType,jdbcType=INTEGER},
            </if>
            <if test="views != null">
                views = #{views,jdbcType=BIGINT},
            </if>
            <if test="articleDat != null">
                article_dat = #{articleDat,jdbcType=TIMESTAMP},
            </if>
            <if test="articleStatus != null">
                article_status = #{articleStatus,jdbcType=INTEGER},
            </if>
            <if test="sourceUrl != null">
                source_url = #{sourceUrl,jdbcType=LONGVARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=LONGVARCHAR},
            </if>
            <if test="authorUrl != null">
                author_url = #{authorUrl,jdbcType=LONGVARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=LONGVARCHAR},
            </if>
            <if test="keyword != null">
                keyword = #{keyword,jdbcType=LONGVARCHAR},
            </if>
            <if test="describes != null">
                describes = #{describes,jdbcType=LONGVARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs"
            parameterType="com.neilren.neilren4j.modules.article.entity.ArticleWithBLOBs">
    update t_article
    set article_type = #{articleType,jdbcType=INTEGER},
      views = #{views,jdbcType=BIGINT},
      article_dat = #{articleDat,jdbcType=TIMESTAMP},
      article_status = #{articleStatus,jdbcType=INTEGER},
      source_url = #{sourceUrl,jdbcType=LONGVARCHAR},
      author = #{author,jdbcType=LONGVARCHAR},
      author_url = #{authorUrl,jdbcType=LONGVARCHAR},
      title = #{title,jdbcType=LONGVARCHAR},
      keyword = #{keyword,jdbcType=LONGVARCHAR},
      describes = #{describes,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.neilren.neilren4j.modules.article.entity.Article">
    update t_article
    set article_type = #{articleType,jdbcType=INTEGER},
      views = #{views,jdbcType=BIGINT},
      article_dat = #{articleDat,jdbcType=TIMESTAMP},
      article_status = #{articleStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>